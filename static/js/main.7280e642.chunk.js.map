{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","content","className","map","tab","classNames","id","href","onClick","title","App","useState","selectedTab","setSelectedTab","newTab","ReactDOM","render","document","getElementById"],"mappings":"kNAYaA,EAAwB,SAAC,GAK/B,IAJLC,EAII,EAJJA,KACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,cACAC,EACI,EADJA,QAEA,OACE,qCACE,qBAAK,UAAQ,gBAAb,SACE,qBAAKC,UAAU,gBAAf,SACE,6BACGJ,EAAKK,KAAI,SAAAC,GAAG,OACX,oBAEEF,UAAWG,IACT,CAAE,YAAaN,IAAkBK,EAAIE,KAEvC,UAAQ,MALV,SAOE,mBACEC,KAAI,WAAMH,EAAIE,IACd,UAAQ,UACRE,QAAS,WACHT,IAAkBK,EAAIE,IACxBN,EAAcI,IALpB,SASGA,EAAIK,SAfFL,EAAIE,aAuBnB,qBAAKJ,UAAU,QAAQ,UAAQ,aAA/B,SACGD,QC1CIH,EAAO,CAClB,CAAEQ,GAAI,QAASG,MAAO,QAASR,QAAS,eACxC,CAAEK,GAAI,QAASG,MAAO,QAASR,QAAS,eACxC,CAAEK,GAAI,QAASG,MAAO,QAASR,QAAS,gBAG7BS,EAAgB,WAC3B,MAAsCC,mBAASb,EAAK,IAApD,mBAAOc,EAAP,KAAoBC,EAApB,KAMA,OACE,sBAAKX,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBU,EAAYH,SAGlC,cAAC,EAAD,CACEX,KAAMA,EACNC,cAAea,EAAYN,GAC3BN,cAbgB,SAACc,GACrBD,EAAeC,IAaXb,QAASW,EAAYX,cC3B7Bc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7280e642.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (newTab: Tab) => void,\n  content: string,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n  content,\n}) => {\n  return (\n    <>\n      <div data-cy=\"TabsComponent\">\n        <div className=\"tabs is-boxed\">\n          <ul>\n            {tabs.map(tab => (\n              <li\n                key={tab.id}\n                className={classNames(\n                  { 'is-active': selectedTabId === tab.id },\n                )}\n                data-cy=\"Tab\"\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => {\n                    if (selectedTabId !== tab.id) {\n                      onTabSelected(tab);\n                    }\n                  }}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {content}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  const onTabSelected = (newTab: Tab) => {\n    setSelectedTab(newTab);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={onTabSelected}\n        content={selectedTab.content}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}